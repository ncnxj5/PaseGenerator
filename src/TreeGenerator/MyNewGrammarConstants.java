/* Generated By:JJTree&JavaCC: Do not edit this line. MyNewGrammarConstants.java */
package TreeGenerator;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MyNewGrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 5;
  /** RegularExpression Id. */
  int MINUS = 6;
  /** RegularExpression Id. */
  int MULTIPLY = 7;
  /** RegularExpression Id. */
  int DIVIDE = 8;
  /** RegularExpression Id. */
  int AND = 9;
  /** RegularExpression Id. */
  int NOT = 10;
  /** RegularExpression Id. */
  int OR = 11;
  /** RegularExpression Id. */
  int LESS = 12;
  /** RegularExpression Id. */
  int LARGER = 13;
  /** RegularExpression Id. */
  int EQUAL = 14;
  /** RegularExpression Id. */
  int LE = 15;
  /** RegularExpression Id. */
  int BE = 16;
  /** RegularExpression Id. */
  int NUMBER = 17;
  /** RegularExpression Id. */
  int DIGIT = 18;
  /** RegularExpression Id. */
  int SYMBOL = 19;
  /** RegularExpression Id. */
  int CHARACTER = 20;
  /** RegularExpression Id. */
  int FLOAT = 21;
  /** RegularExpression Id. */
  int B = 22;
  /** RegularExpression Id. */
  int C = 29;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"AND\"",
    "\"NOT\"",
    "\"OR\"",
    "\"<\"",
    "\">\"",
    "\"=\"",
    "\"<=\"",
    "\">=\"",
    "<NUMBER>",
    "<DIGIT>",
    "<SYMBOL>",
    "<CHARACTER>",
    "<FLOAT>",
    "\"(\"",
    "\"!\"",
    "\"?\"",
    "\"@\"",
    "\"->\"",
    "\",\"",
    "\"ERROR\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"LOOP\"",
    "\"RET\"",
    "\"BOOM\"",
    "\"#\"",
    "\"$\"",
    "\"FOREACH\"",
    "\"IN\"",
    "\"LET\"",
    "\"AS\"",
    "\"DEF\"",
    "\"NUM\"",
    "\"FLOAT\"",
    "\"CHARACTER\"",
    "\"[]\"",
    "\"[\"",
    "\"]\"",
    "\"OBJ\"",
    "\"FROM\"",
  };

}
